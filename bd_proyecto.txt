CREATE TABLE estados (
    est_id SERIAL PRIMARY KEY NOT NULL,
    est_nombre character varying
);

INSERT INTO estados (est_id, est_nombre) VALUES (1, 'Activo');
INSERT INTO estados (est_id, est_nombre) VALUES (2, 'Inactivo');
INSERT INTO estados (est_id, est_nombre) VALUES (3, 'Pendiente');
INSERT INTO estados (est_id, est_nombre) VALUES (4, 'En revision');
INSERT INTO estados (est_id, est_nombre) VALUES (5, 'En proceso');
INSERT INTO estados (est_id, est_nombre) VALUES (6, 'Rechazada');
INSERT INTO estados (est_id, est_nombre) VALUES (7, 'Completada');

CREATE TABLE tipo_estado(
    id_tipo_estado SERIAL PRIMARY KEY NOT NULL,
    id_estado INTEGER,
    id_perteneciente INTEGER,
   FOREIGN KEY (id_estado) REFERENCES estados(est_id)
);

INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (1, 1, 1);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (2, 2, 1);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (3, 3, 2);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (4, 4, 2);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (5, 5, 2);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (6, 6, 2);
INSERT INTO tipo_estado (id_tipo_estado, id_estado, id_perteneciente) VALUES (7, 7, 2);

CREATE TABLE rol (
    rol_id SERIAL PRIMARY KEY NOT NULL,
    rol_nombre character varying(30)
);

INSERT INTO rol (rol_id, rol_nombre) VALUES (1, 'Admin');
INSERT INTO rol (rol_id, rol_nombre) VALUES (2, 'Ciudadano');
INSERT INTO rol (rol_id, rol_nombre) VALUES (3, 'Funcionario');

CREATE TABLE tipo_documento (
    doc_id SERIAL PRIMARY KEY NOT NULL,
    nombre_tipo character varying,
    doc_abrev character varying(4)
);

INSERT INTO tipo_documento (doc_id, nombre_tipo, doc_abrev) VALUES (1, 'Cedula de ciudadania', 'CC');
INSERT INTO tipo_documento (doc_id, nombre_tipo, doc_abrev) VALUES (2, 'Cedula de extranjeria', 'CE');


CREATE TABLE sexo(
    sex_id SERIAL PRIMARY KEY,
    sex_desc character varying(50)
);

INSERT INTO sexo (sex_id, sex_desc) VALUES (1, 'Masculino'), (2, 'Femenino');

CREATE TABLE usuarios (
    usu_id SERIAL PRIMARY KEY NOT NULL,
    usu_documento character varying(50) NOT NULL,
    usu_nombre1 character varying(50) NOT NULL,
    usu_nombre2 character varying(50),
    usu_apellido1 character varying(50) NOT NULL,
    usu_apellido2 character varying(50),
    usu_correo character varying(50) NOT NULL,
    usu_clave character varying(255) NOT NULL,
    usu_tel character varying(50) NOT NULL,
    usu_direccion character varying(500) NOT NULL,
    fecha_nac DATE,
    rol_id integer,
    est_id integer,
    doc_id integer,
    sex_id integer,
    FOREIGN KEY (rol_id) REFERENCES rol(rol_id),
    FOREIGN KEY (est_id) REFERENCES estados(est_id),
    FOREIGN KEY (doc_id) REFERENCES tipo_documento(doc_id),
    FOREIGN KEY (sex_id) REFERENCES sexo(sex_id)
);

INSERT INTO usuarios 
VALUES (1, '1106514243', 'Jose', 'Daniel', 'Ruiz', 'Montaño', 'jose@gmail.com', '3c165908b463ee85a6a32ab2f7c25a9f8a31431cd2cca0a128ea1db41fca8657', '3013623149', 'Calle 120 C 22 42', '2005-09-04', 1, 1, 1, 1);


CREATE TABLE tipo_pqrs(
    id_tipo_pqrs SERIAL PRIMARY KEY NOT NULL, 
    desc_tipo_pqrs character varying(50) NOT NULL
);

INSERT INTO tipo_pqrs VALUES (1, 'Peticion'),(2, 'Queja'), (3, 'Reclamos'), (4, 'Sugerencias');

CREATE TABLE pqrs(
    id_pqrs SERIAL PRIMARY KEY NOT NULL,
    desc_pqrs TEXT NOT NULL, 
    tipo_pqrs INTEGER,
    usu_id INTEGER,
    fecha_hora timestamp NOT NULL,
    FOREIGN KEY (tipo_pqrs) REFERENCES tipo_pqrs(id_tipo_pqrs),
    FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id)
);


REGISTRO DE ACCIDENTES TABLAS 

CREATE TABLE registro_accidente
(
    reg_acc_id serial primary key NOT NULL,
    reg_acc_fecha_hora timestamp NOT NULL,
    tipo_accidente_id integer NOT NULL,
    reg_acc_lesionados boolean NOT NULL,
    reg_acc_observaciones TEXT NOT NULL,
    usu_id integer NOT NULL,
    FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id)

);

CREATE TABLE punto_accidente
(
  id serial NOT NULL,
  id_accidente integer NOT NULL,
  geom geometry(Point,4326)
);


CREATE TABLE imagenes_accidente
(
    img_id integer NOT NULL,
    reg_acc_id integer NOT NULL,
    img_ruta character varying,
    CONSTRAINT imagenes_accidente_pkey PRIMARY KEY (img_id),
    CONSTRAINT imagenes_accidente_reg_acc_id_fkey FOREIGN KEY (reg_acc_id)
        REFERENCES public.registro_accidente (reg_acc_id)
);

CREATE TABLE vehiculo
(
    vehiculo_id integer NOT NULL,
    vehiculo_descripcion character varying(30) NOT NULL,
    CONSTRAINT vehiculo_pkey PRIMARY KEY (vehiculo_id)
);

INSERT INTO vehiculo (vehiculo_id, vehiculo_descripcion) VALUES
(1, 'Automóvil'),
(2, 'Bus'),
(3, 'Buseta'),
(4, 'Camión'),
(5, 'Camioneta'),
(6, 'Microbús'),
(7, 'Tractocamión'),
(8, 'Volqueta'),
(9, 'Motocicleta'),
(10, 'Bicicleta'),
(11, 'Motocarro'),
(12, 'Cuatrimoto');

CREATE TABLE reg_acc_vehi
(
    reg_acc_vehi_id integer NOT NULL,
    reg_acc_id integer NOT NULL,
    vehiculo_id integer NOT NULL,
    CONSTRAINT reg_acc_vehi_pkey PRIMARY KEY (reg_acc_vehi_id),
    CONSTRAINT reg_acc_vehi_reg_acc_id_fkey FOREIGN KEY (reg_acc_id)
        REFERENCES public.registro_accidente (reg_acc_id),
    CONSTRAINT reg_acc_vehi_vehiculo_id_fkey FOREIGN KEY (vehiculo_id)
        REFERENCES public.vehiculo (vehiculo_id)
);

CREATE TABLE tipo_choque
(
    tipo_choque_id integer NOT NULL,
    tipo_choque_desc character varying,
    CONSTRAINT tipo_choque_pkey PRIMARY KEY (tipo_choque_id)
);

INSERT INTO tipo_choque (tipo_choque_id, tipo_choque_desc) VALUES
(1, 'Colisión entre vehiculos'),
(2, 'Colisión con objeto fijo'),
(3, 'Atropello'),
(4, 'Volcamiento');

CREATE TABLE choque_detalle
(
    choq_detal_id integer NOT NULL,
    descripcion character varying(80),
    id_perteneciente integer,
    CONSTRAINT choque_detalle_pkey PRIMARY KEY (choq_detal_id),
    FOREIGN KEY (id_perteneciente) REFERENCES tipo_choque(tipo_choque_id)
);

INSERT INTO choque_detalle (choq_detal_id, descripcion, id_perteneciente) VALUES
(1, 'Automóvil con Bus', 1),
(2, 'Automóvil con Buseta', 1),
(3, 'Automóvil con Camión', 1),
(4, 'Automóvil con Camioneta', 1),
(5, 'Automóvil con Microbús', 1),
(6, 'Automóvil con Tractocamión', 1),
(7, 'Automóvil con Volqueta', 1),
(8, 'Automóvil con Motocicleta', 1),
(9, 'Automóvil con Bicicleta', 1),
(10, 'Automóvil con Motocarro', 1),
(11, 'Automóvil con Cuatrimoto', 1),
(12, 'Bus con Buseta', 1),
(13, 'Bus con Camión', 1),
(14, 'Bus con Camioneta', 1),
(15, 'Bus con Microbús', 1),
(16, 'Bus con Tractocamión', 1),
(17, 'Bus con Volqueta', 1),
(18, 'Bus con Motocicleta', 1),
(19, 'Bus con Bicicleta', 1),
(20, 'Bus con Motocarro', 1),
(21, 'Bus con Cuatrimoto', 1),
(22, 'Buseta con Camión', 1),
(23, 'Buseta con Camioneta', 1),
(24, 'Buseta con Microbús', 1),
(25, 'Buseta con Tractocamión', 1),
(26, 'Buseta con Volqueta', 1),
(27, 'Buseta con Motocicleta', 1),
(28, 'Buseta con Bicicleta', 1),
(29, 'Buseta con Motocarro', 1),
(30, 'Buseta con Cuatrimoto', 1),
(31, 'Camión con Camioneta', 1),
(32, 'Camión con Microbús', 1),
(33, 'Camión con Tractocamión', 1),
(34, 'Camión con Volqueta', 1),
(35, 'Camión con Motocicleta', 1),
(36, 'Camión con Bicicleta', 1),
(37, 'Camión con Motocarro', 1),
(38, 'Camión con Cuatrimoto', 1),
(39, 'Camioneta con Microbús', 1),
(40, 'Camioneta con Tractocamión', 1),
(41, 'Camioneta con Volqueta', 1),
(42, 'Camioneta con Motocicleta', 1),
(43, 'Camioneta con Bicicleta', 1),
(44, 'Camioneta con Motocarro', 1),
(45, 'Camioneta con Cuatrimoto', 1),
(46, 'Microbús con Tractocamión', 1),
(47, 'Microbús con Volqueta', 1),
(48, 'Microbús con Motocicleta', 1),
(49, 'Microbús con Bicicleta', 1),
(50, 'Microbús con Motocarro', 1),
(51, 'Microbús con Cuatrimoto', 1),
(52, 'Tractocamión con Volqueta', 1),
(53, 'Tractocamión con Motocicleta', 1),
(54, 'Tractocamión con Bicicleta', 1),
(55, 'Tractocamión con Motocarro', 1),
(56, 'Tractocamión con Cuatrimoto', 1),
(57, 'Volqueta con Motocicleta', 1),
(58, 'Volqueta con Bicicleta', 1),
(59, 'Volqueta con Motocarro', 1),
(60, 'Volqueta con Cuatrimoto', 1),
(61, 'Motocicleta con Bicicleta', 1),
(62, 'Motocicleta con Motocarro', 1),
(63, 'Motocicleta con Cuatrimoto', 1),
(64, 'Bicicleta con Motocarro', 1),
(65, 'Bicicleta con Cuatrimoto', 1),
(66, 'Motocarro con Cuatrimoto', 1),
(67, 'Poste', 2),
(68, 'Señal de Tránsito', 2),
(69, 'Árbol', 2),
(70, 'Muro', 2),
(71, 'Peatón', 3),
(72, 'Animal', 3),
(73, 'Exceso de velocidad', 4),
(74, 'Maniobra brusca', 4),
(75, 'Pérdida de control', 4),
(76, 'Sobrecarga', 4),
(77, 'Mal estado de la vía', 4),
(78, 'Curva cerrada', 4),
(79, 'Evasión de obstáculo', 4),
(80, 'Terreno resbaladizo', 4);



CREATE TABLE registro_detalle_accidente
(
    reg_det_acc_id integer NOT NULL,
    reg_acc_id integer NOT NULL,
    choque_detalle_id integer NOT NULL,
    CONSTRAINT registro_detalle_accidente_pkey PRIMARY KEY (reg_det_acc_id),
    CONSTRAINT registro_detalle_accidente_choque_detalle_id_fkey FOREIGN KEY (choque_detalle_id)
        REFERENCES public.choque_detalle (choq_detal_id),
    CONSTRAINT registro_detalle_accidente_reg_acc_id_fkey FOREIGN KEY (reg_acc_id)
        REFERENCES public.registro_accidente (reg_acc_id)
);


CREATE TABLE danio
(
    danio_id integer NOT NULL,
    tipo_danio_id integer,
    solicitud_id integer,
    CONSTRAINT danio_pkey PRIMARY KEY (danio_id)
);

INSERT INTO danio (danio_id, tipo_danio_id, solicitud_id) VALUES
(1, 1, 1),
(2, 2, 1),
(3, 3, 1),
(4, 4, 2),
(5, 5, 2),
(6, 6, 2),
(7, 7, 3),
(8, 8, 3),
(9, 9, 3);

CREATE TABLE tipo_danio
(
    tipo_danio_id SERIAL NOT NULL PRIMARY KEY,
    tipo_danio_desc character varying(100)
);

INSERT INTO tipo_danio (tipo_danio_id, tipo_danio_desc) VALUES
(1, 'Huecos en la vía'),
(2, 'Fisuras o grietas'),
(3, 'Hundimientos'),
(4, 'Señal caída'),
(5, 'Señal vandalizada'),
(6, 'Señal ilegible'),
(7, 'Desgaste en reductores'),
(8, 'Desnivel en reductores'),
(9, 'Ausencia de reductores');

REGISTRO DAÑOS EN VIA 

CREATE TABLE tipo_via(
    id_tipo_via SERIAL PRIMARY KEY NOT NULL,
    desc_via character varying
);


INSERT INTO tipo_via (desc_via) VALUES ('Calle');
INSERT INTO tipo_via (desc_via) VALUES ('Carrera');
INSERT INTO tipo_via (desc_via) VALUES ('Avenida');
INSERT INTO tipo_via (desc_via) VALUES ('Transversal');
INSERT INTO tipo_via (desc_via) VALUES ('Diagonal');
INSERT INTO tipo_via (desc_via) VALUES ('Autopista');
INSERT INTO tipo_via (desc_via) VALUES ('Vía de circunvalación');

CREATE TABLE solicitud_via_dan
(
    sol_via_dan_id integer NOT NULL,
    tipo_dano_via_id integer,
    descripcion_via TEXT,
    fecha_hora timestamp without time zone NOT NULL,
    est_sol_id integer,
    usu_id integer,
    via_id integer,
    CONSTRAINT solicitud_via_dan_pkey PRIMARY KEY (sol_via_dan_id),
    FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id),
    FOREIGN KEY (est_sol_id) REFERENCES estados(est_id),
    FOREIGN KEY (via_id) REFERENCES tipo_via(id_tipo_via), 
    FOREIGN KEY (tipo_dano_via_id) REFERENCES danio(danio_id)
);


CREATE TABLE punto_via
(
  id serial NOT NULL,
  id_via integer NOT NULL,
  geom geometry(Point,4326),
  FOREIGN KEY (id_via) REFERENCES solicitud_via_dan(sol_via_dan_id)
);


CREATE TABLE imagenes_vias
(
    img_id integer NOT NULL,
    reg_via_id integer NOT NULL,
    img_ruta character varying NOT NULL,
    CONSTRAINT imagenes_vias_pkey PRIMARY KEY (img_id),
    CONSTRAINT imagenes_vias_reg_via_id_fkey FOREIGN KEY (reg_via_id)
        REFERENCES public.solicitud_via_dan (sol_via_dan_id) 
);




CREATE TABLE categoria_seniales (
   categoria_seniales_id SERIAL NOT NULL PRIMARY KEY,
   categoria_seniales_desc character varying(40) NOT NULL
);


CREATE TABLE orientacion_seniales (
   orientacion_id SERIAL NOT NULL PRIMARY KEY,
   orientacion_desc character varying(50) NOT NULL
);


CREATE TABLE tipo_seniales (
   tipo_senial_id SERIAL NOT NULL PRIMARY KEY,
   tipo_sen_desc character varying(100) NOT NULL,
   desc_sen TEXT,
   img_sen TEXT,
   orientacion_id integer NOT NULL,
   cat_id integer NOT NULL,
   FOREIGN KEY (orientacion_id) REFERENCES orientacion_seniales(orientacion_id),
   FOREIGN KEY (cat_id) REFERENCES categoria_seniales(categoria_seniales_id)
);


CREATE TABLE solicitud_seniales_new (
    sol_sen_new_id SERIAL PRIMARY KEY,
    tipo_sen_id INTEGER NOT NULL, 
    desc_sen TEXT NOT NULL, 
    sol_sen_new_fecha TIMESTAMP,
    est_sol_id INTEGER NOT NULL, 
    usu_id INTEGER NOT NULL, 
    CONSTRAINT fk_tipo_sen FOREIGN KEY (tipo_sen_id) REFERENCES tipo_seniales (tipo_senial_id),
    CONSTRAINT fk_est_sol FOREIGN KEY (est_sol_id) REFERENCES Estados (est_id),
    CONSTRAINT fk_usu FOREIGN KEY (usu_id) REFERENCES usuarios (usu_id)
);



INSERT INTO categoria_seniales VALUES (1,'Reglamentaria'),(2,'Informativa'), (3,'Preventiva');

INSERT INTO orientacion_seniales VALUES (1,'Vertical'),(2,'Horizontal');


INSERT INTO tipo_seniales 
VALUES 
(1, 'Alto o pare', 'Son las que más se suelen encontrar a lo largo de las carreteras, indican al conductor que debe detener el vehículo', 'imgSen/pare.jpg', 1, 1),  
(2, 'Ceda el paso', 'Señal de tránsito que indica al conductor que debe ceder el paso a los vehículos que circulan por la vía a la que se aproxima', 'imgSen/ceda_el_paso.jpg', 1, 1),  
(3, 'Siga de frente', 'Esta señal se empleará para advertir a los usuarios de las vías, la proximidad a un sitio en el cual se desvía la circulación del tránsito', 'imgSen/siga_de_frente.jpg', 1, 1),  
(4, 'No pase', 'Indica al conductor que está prohibido avanzar en esa dirección', 'imgSen/no_pase.jpg', 1, 1),  
(5, 'Giro a la izquierda', 'Anuncian la proximidad de un giro peligroso a la izquierda', 'imgSen/giro_izquierda.jpg', 1, 1),  
(6, 'Prohibido girar a la izquierda', 'Indica que no se permite realizar giros a la izquierda', 'imgSen/prohibido_girar_izquierda.jpg', 1, 1),  
(7, 'Giro a la derecha', 'Anuncian la proximidad de un giro peligroso a la derecha', 'imgSen/giro_derecha.jpg', 1, 1),  
(8, 'Prohibido girar a la derecha', 'Indica que no se permite realizar giros a la derecha', 'imgSen/prohibido_girar_derecha.jpg', 1, 1),  
(9, 'Prohibido girar en "U"', 'Señal que indica que no se puede realizar un giro en forma de "U"', 'imgSen/prohibido_girar_u.jpg', 1, 1),  
(10, 'Doble vía', 'Indica que la vía cuenta con doble sentido de circulación', 'imgSen/doble_via.jpg', 1, 1),  
(11, 'Tres carriles (uno en contraflujo)', 'Indica que hay tres carriles disponibles, uno de los cuales está en sentido contrario', 'imgSen/tres_carriles_uno_contraflujo.jpg', 1, 1),  
(12, 'Tres carriles (dos en contraflujo)', 'Indica que hay tres carriles disponibles, dos de los cuales están en sentido contrario', 'imgSen/tres_carriles_dos_contraflujo.jpg', 1, 1),  
(13, 'Prohibido el cambio de calzada', 'Prohíbe a los conductores cruzar de un carril a otro en la vía', 'imgSen/prohibido_cambio_calzada.jpg', 1, 1),  
(14, 'Circulación prohibida de vehículos automotores', 'Indica que no está permitido el paso de vehículos automotores', 'imgSen/circulacion_prohibida_automotores.jpg', 1, 1),  
(15, 'Vehículos pesados a la derecha', 'Señala que los vehículos pesados deben circular por el lado derecho de la vía', 'imgSen/vehiculos_pesados_derecha.jpg', 1, 1),  
(16, 'Circulación prohibida de vehículos de carga', 'Prohíbe el tránsito de vehículos destinados al transporte de carga', 'imgSen/circulacion_prohibida_carga.jpg', 1, 1),  
(17, 'Peatones a la izquierda', 'Indica que los peatones deben circular por el lado izquierdo de la vía', 'imgSen/peatones_izquierda.jpg', 1, 1),  
(18, 'Curva sucesiva (primero derecha)', 'Advierte sobre una curva doble, siendo la primera hacia la derecha', 'imgSen/curva_sucesiva_derecha.jpg', 1, 1),  
(19, 'Prohibido parquear', 'Prohíbe estacionar en la zona señalada', 'imgSen/prohibido_parquear.jpg', 1, 1),  
(20, 'Prohibido pitar', 'Prohíbe el uso de bocinas en la zona señalada', 'imgSen/prohibido_pitar.jpg', 1, 1),  
(21, 'Velocidad máxima', 'Indica el límite máximo de velocidad permitido en esa vía', 'imgSen/velocidad_maxima.jpg', 1, 1),  
(22, 'Peso máximo total permitido', 'Indica el peso máximo permitido para vehículos en esa vía', 'imgSen/peso_maximo_total.jpg', 1, 1),  
(23, 'Altura máxima permitida', 'Señal que indica la altura máxima permitida para vehículos en esa vía', 'imgSen/altura_maxima.jpg', 2, 1),  
(24, 'Ancho máximo permitido', 'Indica el ancho máximo permitido para vehículos que transitan por esa vía', 'imgSen/ancho_maximo.jpg', 1, 1),  
(25, 'Zona de estacionamiento de taxis', 'Indica un área designada exclusivamente para el estacionamiento de taxis', 'imgSen/zona_taxis.jpg', 1, 1),  
(26, 'Circulación de carga baja', 'Permite únicamente la circulación de vehículos con carga baja', 'imgSen/circulacion_carga_baja.jpg', 1, 1),  
(27, 'Retén', 'Señal que indica la proximidad de un retén policial o de control', 'imgSen/reten.jpg', 1, 1),  
(28, 'Ciclorruta', 'Indica un carril o vía exclusiva para bicicletas', 'imgSen/ciclorruta.jpg', 1, 1),  
(29, 'Sentido único de circulación', 'Indica que la vía tiene un solo sentido de circulación', 'imgSen/sentido_unico.jpg', 1, 1),  
(30, 'Sentido de circulación doble', 'Indica que la vía tiene doble sentido de circulación', 'imgSen/sentido_doble.jpg', 1, 1),  
(31, 'Paradero', 'Indica la ubicación de un punto de parada autorizado para transporte público', 'imgSen/paradero.jpg', 1, 1),  
(32, 'Prohibido dejar o recoger pasajeros', 'Prohíbe detenerse para subir o bajar pasajeros en esa zona', 'imgSen/prohibido_recoger_pasajeros.jpg', 1, 1),  
(33, 'Zona de cargue y descargue', 'Señala un área destinada al cargue y descargue de mercancías', 'imgSen/zona_cargue_descargue.jpg', 1, 1),  
(34, 'Prohibido el cargue y descargue', 'Indica que no está permitido realizar actividades de cargue y descargue en esa zona', 'imgSen/prohibido_cargue_descargue.jpg', 1, 1),  
(35, 'Espaciamiento', 'Indica la distancia mínima que los vehículos deben mantener entre sí', 'imgSen/espaciamiento.jpg', 1, 1),  
(36, 'Indicación de semáforo para giro a la izquierda', 'Señala que existe un semáforo específico para giros a la izquierda', 'imgSen/semaforo_giro_izquierda.jpg', 1, 1),  
(37, 'Indicación de semáforo para giro a la derecha', 'Señala que existe un semáforo específico para giros a la derecha', 'imgSen/semaforo_giro_derecha.jpg', 1, 1),  
(38, 'Vía cerrada', 'Indica que la vía está cerrada al tránsito', 'imgSen/via_cerrada.jpg', 1, 1),  
(39, 'Desvío', 'Señala una ruta alterna debido a una interrupción en la vía principal', 'imgSen/desvio.jpg', 2, 1),  
(40, 'Paso uno a uno', 'Indica que los vehículos deben alternar el paso en la zona señalada', 'imgSen/paso_uno_a_uno.jpg', 1, 1),
(41, 'Ruta Nacional', 'Indica una ruta nacional importante.', 'imgSen/ruta_nacional.jpg', 1, 2),  
(42, 'Ruta Departamental', 'Señala una ruta dentro de un departamento.', 'imgSen/ruta_departamental.jpg', 1, 2),  
(43, 'Ruta Panamericana', 'Indica que la vía es parte de la Ruta Panamericana.', 'imgSen/ruta_panamericana.jpg', 1, 2),  
(44, 'Ruta Marginal de la Selva', 'Señala que la vía pertenece a la Ruta Marginal de la Selva.', 'imgSen/ruta_marginal_selva.jpg', 1, 2),  
(45, 'Poste de referencia', 'Indica un poste con información referencial.', 'imgSen/poste_referencia.jpg', 1, 2),  
(46, 'Información previa de destino', 'Señala información útil antes de llegar a un destino.', 'imgSen/informacion_previa_destino.jpg', 2, 2),  
(47, 'Información de destino', 'Indica información específica de un destino.', 'imgSen/informacion_destino.jpg', 2, 2),  
(48, 'Croquis', 'Representa un croquis o mapa del área.', 'imgSen/croquis.jpg', 2, 2),  
(49, 'Descripción de giros', 'Indica cómo realizar giros en intersecciones.', 'imgSen/descripcion_giros.jpg', 2, 2),  
(50, 'Confirmación de nomenclatura de carretera', 'Señala la nomenclatura oficial de una vía.', 'imgSen/nomenclatura_carretera.jpg', 2, 2),  
(51, 'Sitio de parqueo', 'Indica un lugar designado para estacionar vehículos.', 'imgSen/sitio_parqueo.jpg', 1, 1),  
(52, 'Zona especiales de parqueo', 'Señala áreas exclusivas para estacionamiento especial.', 'imgSen/zona_especial_parqueo.jpg', 1, 2),  
(53, 'Paradero de buses', 'Indica un punto oficial de parada para buses.', 'imgSen/paradero_buses.jpg', 1, 2),  
(54, 'Transbordador', 'Indica la presencia de un transbordador.', 'imgSen/transbordador.jpg', 1, 1),   
(55, 'Monumento nacional', 'Indica la proximidad a un monumento de importancia nacional.', 'imgSen/monumento_nacional.jpg', 1, 2),  
(56, 'Zona militar', 'Señala la proximidad a una zona militar.', 'imgSen/zona_militar.jpg', 1, 2),  
(57, 'Aeropuerto', 'Indica la proximidad a un aeropuerto.', 'imgSen/aeropuerto.jpg', 1, 2),  
(58, 'Hospedaje', 'Señala lugares destinados al hospedaje.', 'imgSen/hospedaje.jpg', 1, 2),
(59, 'Primeros auxilios', 'Indica la presencia de servicios de primeros auxilios.', 'imgSen/primeros_auxilios.jpg', 1, 2),  
(60, 'Servicios sanitarios', 'Señala la ubicación de servicios sanitarios.', 'imgSen/servicios_sanitarios.jpg', 1, 2),  
(61, 'Restaurante', 'Indica la proximidad a un restaurante.', 'imgSen/restaurante.jpg', 1, 2),  
(62, 'Teléfono', 'Señala la ubicación de un teléfono público o servicio telefónico.', 'imgSen/telefono.jpg', 1, 2),  
(63, 'Iglesia', 'Indica la proximidad a una iglesia o lugar de culto.', 'imgSen/iglesia.jpg', 1, 2),  
(64, 'Taller', 'Señala la ubicación de un taller mecánico.', 'imgSen/taller.jpg', 1, 2),  
(65, 'Estación de servicio', 'Indica la proximidad a una gasolinera o estación de servicio.', 'imgSen/estacion_servicio.jpg', 1, 2),  
(66, 'Montallantas', 'Señala un lugar donde se realizan servicios de cambio o reparación de llantas.', 'imgSen/montallantas.jpg', 1, 2),  
(67, 'Cruce peatonal', 'Indica un lugar designado para que los peatones crucen la vía.', 'imgSen/cruce_peatonal.jpg', 1, 2),  
(68, 'Discapacitados', 'Señala un área o servicio destinado a personas con discapacidad.', 'imgSen/discapacitados.jpg', 1, 2),  
(69, 'Nomenclatura urbana', 'Indica información sobre la nomenclatura de calles o avenidas.', 'imgSen/nomenclatura_urbana.jpg', 2, 2),   
(70, 'Transporte ferroviario', 'Señala un área relacionada con transporte en tren.', 'imgSen/transporte_ferroviario.jpg', 2, 2),  
(71, 'Transporte masivo', 'Indica la presencia de sistemas de transporte público masivo.', 'imgSen/transporte_masivo.jpg', 1, 2),  
(72, 'Zona recreativa', 'Señala la proximidad a un área de recreación.', 'imgSen/zona_recreativa.jpg', 1, 2),  
(73, 'Obra en la vía', 'Indica que se realizan trabajos en la vía.', 'imgSen/obra_en_via.jpg', 1, 2),  
(74, 'Inicio de obra', 'Señala el inicio de una obra en la vía.', 'imgSen/inicio_obra.jpg', 1, 2),  
(75, 'Fin de obra', 'Indica el fin de los trabajos en la vía.', 'imgSen/fin_obra.jpg', 1, 2),  
(76, 'Carril izquierdo cerrado', 'Señala que el carril izquierdo está cerrado.', 'imgSen/carril_izquierdo_cerrado.jpg', 1, 2),  
(77, 'Resalto', 'Señala la presencia de un resalto en la vía.', 'imgSen/resalto.jpg', 2, 3),
(78, 'Depresión', 'Indica la presencia de una depresión en la vía.', 'imgSen/depresion.jpg', 2, 3),
(79, 'Descenso peligroso', 'Advierte de un descenso peligroso.', 'imgSen/descenso_peligroso.jpg', 2, 3),
(80, 'Reducción simétrica de calzada', 'Señala la reducción simétrica de la calzada.', 'imgSen/reduccion_simetrica.png', 2, 3),
(81, 'Reducción asimétrica de calzada derecha', 'Indica la reducción de la calzada por el lado derecho.', 'imgSen/reduccion_asim_der.jpg', 2, 3),
(82, 'Reducción asimétrica de calzada izquierda', 'Indica la reducción de la calzada por el lado izquierdo.', 'imgSen/reduccion_asim_izq.jpg', 2, 3),
(83, 'Puente angosto', 'Advierte sobre un puente angosto en la vía.', 'imgSen/puente_angosto.jpg', 2, 3),
(84, 'Túnel', 'Señala la presencia de un túnel en la vía.', 'imgSen/tunel.jpg', 1, 3),
(85, 'Zona de derrumbe', 'Advierte sobre una zona con posible derrumbe.', 'imgSen/zona_derrumbe.png', 2, 3),
(86, 'Superficie deslizante', 'Advierte sobre una superficie deslizante en la vía.', 'imgSen/superficie_deslizante.jpg', 2, 3),
(87, 'Maquinaria agrícola en la vía', 'Señala la posible presencia de maquinaria agrícola en la vía.', 'imgSen/maquinaria_agricola.jpg', 2, 3),
(88, 'Peatones en la vía', 'Advierte sobre la presencia de peatones en la vía.', 'imgSen/peatones_via.jpg', 2, 3),
(89, 'Zona escolar', 'Señala la proximidad de una zona escolar.', 'imgSen/zona_escolar.jpg', 1, 3),
(90, 'Riesgo de accidente', 'Señala un punto con alto riesgo de accidente.', 'imgSen/riesgo_accidente.jpg', 2, 3);







CREATE TABLE punto_senialNew
(
  id serial NOT NULL,
  id_senialNew integer NOT NULL,
  geom geometry(Point,4326)
);


CREATE TABLE solicitud_seniales_dan (
    sol_sen_dan_id SERIAL PRIMARY KEY,
    tipo_sen_id INTEGER NOT NULL, 
    desc_sen_dan TEXT NOT NULL,
    danio_id INTEGER NOT NULL, 
    sol_sen_dan_fecha TIMESTAMP,
    img_sen_dan TEXT,
    est_sol_id INTEGER NOT NULL, 
    usu_id INTEGER NOT NULL, 
    CONSTRAINT fk_tipo_sen FOREIGN KEY (tipo_sen_id) REFERENCES tipo_seniales (tipo_senial_id),
    CONSTRAINT fk_est_sol FOREIGN KEY (est_sol_id) REFERENCES Estados (est_id),
    CONSTRAINT fk_usu FOREIGN KEY (usu_id) REFERENCES usuarios (usu_id),
    CONSTRAINT fk_dan FOREIGN KEY (danio_id) REFERENCES danio(danio_id)
);

CREATE TABLE punto_senialDan
(
  id serial NOT NULL,
  id_senialDan integer NOT NULL,
  geom geometry(Point,4326)
);

CREATE TABLE categoria_reductores (
    id_categoria SERIAL PRIMARY KEY,
    nombre_categoria VARCHAR(100) NOT NULL
);

INSERT INTO categoria_reductores (nombre_categoria)
VALUES
    ('Reductores estructurales'),
    ('Reductores de señalización');


CREATE TABLE tipos_reductores (
    tipo_red_id SERIAL PRIMARY KEY,
    nombre_tipo_red VARCHAR(100) NOT NULL,
    descripcion_tipo_red TEXT,
    img_reductor TEXT,
    cat_id INTEGER,
    CONSTRAINT fk_cat FOREIGN KEY (cat_id) REFERENCES categoria_reductores(id_categoria)
);


INSERT INTO tipos_reductores VALUES
(1, 'Reductor de concreto', 'Entre todos los tipos de reductores de velocidad vial, todavía son los más comunes de ver. Como su nombre lo indica, son aquellos topes hechos en concreto.', 'img/reductorpavimento.jpg', 1),
(2, 'Reductor de resalto virtual', 'Aunque tienen menos presencia, podría decirse que también son reductores de concreto, pero no propiamente como los topes. Esto se debe a que no cuentan con volumen, pero sí están sobre el pavimento.', 'img/reductorvirtual.jpg', 2),
(3, 'Tachas reflectivas', 'Son pequeños dispositivos que, más que reductores, sirven para acompañar las señaléticas en el pavimento. Pueden ser fabricadas tanto en plástico como en acero', 'img/tachasRef.jpg', 2),
(4, 'Reductor plastico', 'Son dispositivos diseñados para disminuir la velocidad de los vehículos en zonas específicas, como cruces peatonales, escuelas, hospitales, zonas residenciales, estacionamientos y áreas de alta circulación de personas.', 'img/reductorplastico.jpg', 1);




CREATE TABLE solicitud_reductores_dan (
    sol_red_dan_id SERIAL PRIMARY KEY, 
    tipo_red_id INTEGER NOT NULL,      
    danio_id INTEGER NOT NULL,         
    desc_red TEXT,
    sol_red_dan_fecha TIMESTAMP,
    img_red_dan TEXT,                     
    est_sol_id INTEGER NOT NULL,       
    usu_id INTEGER NOT NULL,
    FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id),
    FOREIGN KEY (est_sol_id) REFERENCES estados(est_id),
    FOREIGN KEY (danio_id) REFERENCES tipo_danio(tipo_danio_id),
    FOREIGN KEY (tipo_red_id) REFERENCES tipos_reductores(tipo_red_id)
);

CREATE TABLE punto_reductorDan
(
  id_red_dan serial NOT NULL,
  id_reductorDan integer NOT NULL,
  geom geometry(Point,4326)
);


CREATE TABLE solicitud_reductores_new (
    sol_red_new_id SERIAL PRIMARY KEY, 
    tipo_red_id INTEGER NOT NULL,      
    desc_red_new TEXT,
    sol_red_new_fecha TIMESTAMP,  
    img_red_new TEXT,                  
    est_sol_id INTEGER NOT NULL,       
    usu_id INTEGER NOT NULL,
    FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id),
    FOREIGN KEY (est_sol_id) REFERENCES estados(est_id),
    FOREIGN KEY (tipo_red_id) REFERENCES tipos_reductores(tipo_red_id)
);

CREATE TABLE punto_reductorNew
(
  id_red_new serial NOT NULL,
  id_reductorNew integer NOT NULL,
  geom geometry(Point,4326)
);


CREATE TABLE tokens_contra
(
  id_token serial NOT NULL,
  token character varying(6) NOT NULL,
  usu_id integer NOT NULL,
  expiracion timestamp without time zone NOT NULL,
  CONSTRAINT tokens_contra_pkey PRIMARY KEY (id_token), 
   FOREIGN KEY (usu_id) REFERENCES usuarios(usu_id)
);



DISPARADORES

CREATE TABLE auditoria_usuarios (
    id SERIAL PRIMARY KEY,
    usuario_id INTEGER NOT NULL,
    fecha TIMESTAMP DEFAULT NOW()
);

CREATE OR REPLACE FUNCTION registrar_usuario()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO auditoria_usuarios(usuario_id, fecha)
    VALUES (NEW.usu_id, NOW()); 
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_registrar_usuario
AFTER INSERT ON usuarios
FOR EACH ROW
EXECUTE PROCEDURE registrar_usuario();



PROCEDIMIENTOS 

CREATE OR REPLACE FUNCTION contar_usuarios(OUT total INTEGER)
AS $$
BEGIN
    SELECT COUNT(*) INTO total FROM usuarios;
END;
$$ LANGUAGE plpgsql;

___________________________AUDITORIA__________________________

CREATE TABLE auditoriaSenNew(
  au_sen_new_id serial primary key not null,
  au_sen_new_fechaH TIMESTAMP,
  au_sen_new_desc TEXT not null,
  au_sen_new_estadoIni integer not null,
  au_sen_new_estadoFin integer not null,
  sol_sen_new_id integer not null,
  usu_id integer not null
);


CREATE TABLE auditoriaSenDan(
  au_sen_dan_id serial primary key not null,
  au_sen_dan_fechaH TIMESTAMP,
  au_sen_dan_desc TEXT not null,
  au_sen_dan_estadoIni integer not null,
  au_sen_dan_estadoFin integer not null,
  sol_sen_dan_id integer not null,
  usu_id integer not null
);
 --------------------

CREATE TABLE auditoriaRedNew(
  au_red_new_id serial primary key not null,
  au_red_new_fechaH TIMESTAMP,
  au_red_new_desc TEXT not null,
  au_red_new_estadoIni integer not null,
  au_red_new_estadoFin integer not null,
  sol_red_new_id integer not null,
  usu_id integer not null
);


CREATE TABLE auditoriaRedDan(
  au_red_dan_id serial primary key not null,
  au_red_dan_fechaH TIMESTAMP,
  au_red_dan_desc TEXT not null,
  au_red_dan_estadoIni integer not null,
  au_red_dan_estadoFin integer not null,
  sol_red_dan_id integer not null,
  usu_id integer not null
);

-------------------------------------



CREATE TABLE auditoriaVia(
  au_via_id serial primary key not null,
  au_via_fechaH TIMESTAMP,
  au_via_desc TEXT not null,
  au_via_estadoIni integer not null,
  au_via_estadoFin integer not null,
  sol_via_dan_id integer not null,
  usu_id integer not null
);


----------------------------------------------


CREATE TABLE auditoriaAccidente(
  au_acc_id serial primary key not null,
  au_acc_fechaH TIMESTAMP,
  au_acc_desc TEXT not null,
  au_acc_estadoIni integer not null,
  au_acc_estadoFin integer not null,
  reg_acc_id integer not null,
  usu_id integer not null
);






